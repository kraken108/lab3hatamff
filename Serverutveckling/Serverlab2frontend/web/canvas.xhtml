<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets">
    <h:head>
        <title>Facelet Title</title>
    </h:head>
    <h:body rendered="#{userBean.isLoggedIn}" onload="init()">

        <ui:include src='navbar.xhtml'/>
        <div style="float:left">
            <h1>Welcome to the canvas!</h1>
            <canvas id="myCanvas" width="400" height="400"></canvas>
            <script type="text/javascript">
                var c = document.getElementById("myCanvas");
                var cxt = c.getContext("2d");

                var flag = false,
                        prevX = 0,
                        currX = 0,
                        prevY = 0,
                        currY = 0,
                        dot_flag = false;

                var x = "black",
                        y = 2;

                cxt.fillStyle = "#FF0000";
                //cxt.fillRect(200, 200, 150, 75);
                //

                function init() {
                    w = canvas.width;
                    h = canvas.height;

                    canvas.addEventListener("mousemove", function (e) {
                        findxy('move', e)
                    }, false);
                    canvas.addEventListener("mousedown", function (e) {
                        findxy('down', e)
                    }, false);
                    canvas.addEventListener("mouseup", function (e) {
                        findxy('up', e)
                    }, false);
                    canvas.addEventListener("mouseout", function (e) {
                        findxy('out', e)
                    }, false);
                }


                function findxy(res, e) {
                    if (res === 'down') {
                        prevX = currX;
                        prevY = currY;
                        currX = e.clientX - canvas.offsetLeft;
                        currY = e.clientY - canvas.offsetTop;

                        flag = true;
                        dot_flag = true;
                        if (dot_flag) {
                            ctx.beginPath();
                            ctx.fillStyle = x;
                            ctx.fillRect(currX, currY, 2, 2);
                            ctx.closePath();
                            dot_flag = false;
                        }
                    }
                    if (res === 'up' || res === "out") {
                        flag = false;
                    }
                    if (res === 'move') {
                        if (flag) {
                            prevX = currX;
                            prevY = currY;
                            currX = e.clientX - canvas.offsetLeft;
                            currY = e.clientY - canvas.offsetTop;
                            draw();
                        }
                    }
                }

                function draw() {
                    ctx.beginPath();
                    ctx.moveTo(prevX, prevY);
                    ctx.lineTo(currX, currY);
                    ctx.strokeStyle = x;
                    ctx.lineWidth = y;
                    ctx.stroke();
                    ctx.closePath();
                }
            </script>
        </div>

    </h:body>
</html>

